class Solution {
public:
    int maxProduct(vector<string>& words) {
        vector <int> mask(words.size(),0);
        int res=0;
        char c;
        for(int i=0;i<words.size();i++){
            for(char c:words[i]){
          
                mask[i] |= 1<<(c-'a');
            }
        for(int j=0;j<i;j++){
            if((mask[j]&mask[i])==0)
                res=max(res,int(words[j].size()*words[i].size()));
        }
        }
        return res;
       
    }
};
//因为题目中说都是小写字母，那么只有26位，一个整型数int有32位，我们可以用后26位来对应26个字母，
//若为1，说明该对应位置的字母出现过，那么每个单词的都可由一个int数字表示，两个单词没有共同字母的条件是这两个int数相与为0
//vector可视为一个动态二维数组。
 //for(char c:words[i])等价于for(j=0;j<i;j++)c=words[i][j]
